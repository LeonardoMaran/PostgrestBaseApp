name: stores

table: |-
  (
    id                   serial primary key,
  	created_at					 timestamptz not null default now(),
    updated_at					 timestamptz not null default now(),

    user_id              int unique references data.users(id) not null,

    name                 text,
    pic                  text,
    des                  text,
    status               smallint
  )

index:
  - user_id

rls:
  - public.rls_select('stores')
  - app_user.rls_insert('stores')
  - app_user.rls_update('stores', 'user_id = request.user_id()')

view:
  - name: stores
    define: |-
      create or replace view api.stores as
        select * from data.stores order by id desc
    rest:
      - public.rest_get('stores')
      - app_user.rls_post('stores', '(name, pic , des)')
      - app_user.rls_patch('stores', '(name, pic , des, status)')

trigger:
  update: trigger_update_update_at()
