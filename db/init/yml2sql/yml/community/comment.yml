name: comments

table: |-
  (
    id                   serial primary key,
  	created_at					 timestamptz not null default now(),
  	updated_at					 timestamptz not null default now(),

    body                 text,
  	user_id              int references data.users(id) not null default request.user_id(),
  	post_id              int references data.posts(id) not null
  )

index:
  - user_id
  - post_id

rls:
  - public.rls_select('comments')
  - app_user.rls_insert('comments')
  - app_user.rls_update('comments')
  - app_user.rls_delete('comments', 'user_id = request.user_id() or is_group_admin(''posts'', post_id)')
  - app_admin.rls_delete('comments', 'true')

view:
  - name: comments
    define: |-
      create or replace view api.comments as
        select * from data.comments order by id desc
    rest:
      - public.rest_get('comments')
      - app_user.rest_post('comments', '(body)')
      - app_user.rest_patch('comments', '(body)')
      - app_user.rest_delete('comments')
      - app_admin.rest_delete('comments')

notify:
  - id

trigger:
  update: trigger_update_update_at()
